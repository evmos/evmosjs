// @ts-nocheck
/* eslint-disable */
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.4
 * source: evmos/revenue/v1/genesis.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./revenue";
import * as pb_1 from "google-protobuf";
export namespace evmos.revenue.v1 {
    export class GenesisState extends pb_1.Message {
        constructor(data?: any[] | {
            params?: Params;
            revenues?: dependency_1.evmos.revenue.v1.Revenue[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("params" in data && data.params != undefined) {
                    this.params = data.params;
                }
                if ("revenues" in data && data.revenues != undefined) {
                    this.revenues = data.revenues;
                }
            }
        }
        get params() {
            return pb_1.Message.getWrapperField(this, Params, 1) as Params;
        }
        set params(value: Params) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get revenues() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.evmos.revenue.v1.Revenue, 2) as dependency_1.evmos.revenue.v1.Revenue[];
        }
        set revenues(value: dependency_1.evmos.revenue.v1.Revenue[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        static fromObject(data: {
            params?: ReturnType<typeof Params.prototype.toObject>;
            revenues?: ReturnType<typeof dependency_1.evmos.revenue.v1.Revenue.prototype.toObject>[];
        }) {
            const message = new GenesisState({});
            if (data.params != null) {
                message.params = Params.fromObject(data.params);
            }
            if (data.revenues != null) {
                message.revenues = data.revenues.map(item => dependency_1.evmos.revenue.v1.Revenue.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                params?: ReturnType<typeof Params.prototype.toObject>;
                revenues?: ReturnType<typeof dependency_1.evmos.revenue.v1.Revenue.prototype.toObject>[];
            } = {};
            if (this.params != null) {
                data.params = this.params.toObject();
            }
            if (this.revenues != null) {
                data.revenues = this.revenues.map((item: dependency_1.evmos.revenue.v1.Revenue) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.params !== undefined)
                writer.writeMessage(1, this.params, () => this.params.serialize(writer));
            if (this.revenues !== undefined)
                writer.writeRepeatedMessage(2, this.revenues, (item: dependency_1.evmos.revenue.v1.Revenue) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GenesisState {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GenesisState();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.params, () => message.params = Params.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.revenues, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.evmos.revenue.v1.Revenue.deserialize(reader), dependency_1.evmos.revenue.v1.Revenue));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GenesisState {
            return GenesisState.deserialize(bytes);
        }
    }
    export class Params extends pb_1.Message {
        constructor(data?: any[] | {
            enable_revenue?: boolean;
            developer_shares?: string;
            addr_derivation_cost_create?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("enable_revenue" in data && data.enable_revenue != undefined) {
                    this.enable_revenue = data.enable_revenue;
                }
                if ("developer_shares" in data && data.developer_shares != undefined) {
                    this.developer_shares = data.developer_shares;
                }
                if ("addr_derivation_cost_create" in data && data.addr_derivation_cost_create != undefined) {
                    this.addr_derivation_cost_create = data.addr_derivation_cost_create;
                }
            }
        }
        get enable_revenue() {
            return pb_1.Message.getField(this, 1) as boolean;
        }
        set enable_revenue(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get developer_shares() {
            return pb_1.Message.getField(this, 2) as string;
        }
        set developer_shares(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get addr_derivation_cost_create() {
            return pb_1.Message.getField(this, 3) as number;
        }
        set addr_derivation_cost_create(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            enable_revenue?: boolean;
            developer_shares?: string;
            addr_derivation_cost_create?: number;
        }) {
            const message = new Params({});
            if (data.enable_revenue != null) {
                message.enable_revenue = data.enable_revenue;
            }
            if (data.developer_shares != null) {
                message.developer_shares = data.developer_shares;
            }
            if (data.addr_derivation_cost_create != null) {
                message.addr_derivation_cost_create = data.addr_derivation_cost_create;
            }
            return message;
        }
        toObject() {
            const data: {
                enable_revenue?: boolean;
                developer_shares?: string;
                addr_derivation_cost_create?: number;
            } = {};
            if (this.enable_revenue != null) {
                data.enable_revenue = this.enable_revenue;
            }
            if (this.developer_shares != null) {
                data.developer_shares = this.developer_shares;
            }
            if (this.addr_derivation_cost_create != null) {
                data.addr_derivation_cost_create = this.addr_derivation_cost_create;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.enable_revenue !== undefined)
                writer.writeBool(1, this.enable_revenue);
            if (typeof this.developer_shares === "string" && this.developer_shares.length)
                writer.writeString(2, this.developer_shares);
            if (this.addr_derivation_cost_create !== undefined)
                writer.writeUint64(3, this.addr_derivation_cost_create);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Params {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Params();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.enable_revenue = reader.readBool();
                        break;
                    case 2:
                        message.developer_shares = reader.readString();
                        break;
                    case 3:
                        message.addr_derivation_cost_create = reader.readUint64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Params {
            return Params.deserialize(bytes);
        }
    }
}
