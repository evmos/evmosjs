// @ts-nocheck
/* eslint-disable */
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.17.3
 * source: cosmos/staking/v1beta1/query.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../base/query/v1beta1/pagination";
import * as dependency_2 from "./../../../gogoproto/gogo";
import * as dependency_3 from "./../../../google/api/annotations";
import * as dependency_4 from "./staking";
import * as pb_1 from "google-protobuf";
export namespace cosmos.staking.v1beta1 {
    export class QueryValidatorsRequest extends pb_1.Message {
        constructor(data?: any[] | {
            status?: string;
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get status() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set status(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            status?: string;
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }) {
            const message = new QueryValidatorsRequest({});
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                status?: string;
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.status === "string" && this.status.length)
                writer.writeString(1, this.status);
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryValidatorsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryValidatorsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.status = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryValidatorsRequest {
            return QueryValidatorsRequest.deserialize(bytes);
        }
    }
    export class QueryValidatorsResponse extends pb_1.Message {
        constructor(data?: any[] | {
            validators?: dependency_4.cosmos.staking.v1beta1.Validator[];
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("validators" in data && data.validators != undefined) {
                    this.validators = data.validators;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get validators() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.cosmos.staking.v1beta1.Validator, 1) as dependency_4.cosmos.staking.v1beta1.Validator[];
        }
        set validators(value: dependency_4.cosmos.staking.v1beta1.Validator[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            validators?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Validator.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }) {
            const message = new QueryValidatorsResponse({});
            if (data.validators != null) {
                message.validators = data.validators.map(item => dependency_4.cosmos.staking.v1beta1.Validator.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                validators?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Validator.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.validators != null) {
                data.validators = this.validators.map((item: dependency_4.cosmos.staking.v1beta1.Validator) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.validators !== undefined)
                writer.writeRepeatedMessage(1, this.validators, (item: dependency_4.cosmos.staking.v1beta1.Validator) => item.serialize(writer));
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryValidatorsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryValidatorsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.validators, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_4.cosmos.staking.v1beta1.Validator.deserialize(reader), dependency_4.cosmos.staking.v1beta1.Validator));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryValidatorsResponse {
            return QueryValidatorsResponse.deserialize(bytes);
        }
    }
    export class QueryValidatorRequest extends pb_1.Message {
        constructor(data?: any[] | {
            validator_addr?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("validator_addr" in data && data.validator_addr != undefined) {
                    this.validator_addr = data.validator_addr;
                }
            }
        }
        get validator_addr() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set validator_addr(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            validator_addr?: string;
        }) {
            const message = new QueryValidatorRequest({});
            if (data.validator_addr != null) {
                message.validator_addr = data.validator_addr;
            }
            return message;
        }
        toObject() {
            const data: {
                validator_addr?: string;
            } = {};
            if (this.validator_addr != null) {
                data.validator_addr = this.validator_addr;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.validator_addr === "string" && this.validator_addr.length)
                writer.writeString(1, this.validator_addr);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryValidatorRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryValidatorRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.validator_addr = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryValidatorRequest {
            return QueryValidatorRequest.deserialize(bytes);
        }
    }
    export class QueryValidatorResponse extends pb_1.Message {
        constructor(data?: any[] | {
            validator?: dependency_4.cosmos.staking.v1beta1.Validator;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("validator" in data && data.validator != undefined) {
                    this.validator = data.validator;
                }
            }
        }
        get validator() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.staking.v1beta1.Validator, 1) as dependency_4.cosmos.staking.v1beta1.Validator;
        }
        set validator(value: dependency_4.cosmos.staking.v1beta1.Validator) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        static fromObject(data: {
            validator?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Validator.prototype.toObject>;
        }) {
            const message = new QueryValidatorResponse({});
            if (data.validator != null) {
                message.validator = dependency_4.cosmos.staking.v1beta1.Validator.fromObject(data.validator);
            }
            return message;
        }
        toObject() {
            const data: {
                validator?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Validator.prototype.toObject>;
            } = {};
            if (this.validator != null) {
                data.validator = this.validator.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.validator !== undefined)
                writer.writeMessage(1, this.validator, () => this.validator.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryValidatorResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryValidatorResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.validator, () => message.validator = dependency_4.cosmos.staking.v1beta1.Validator.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryValidatorResponse {
            return QueryValidatorResponse.deserialize(bytes);
        }
    }
    export class QueryValidatorDelegationsRequest extends pb_1.Message {
        constructor(data?: any[] | {
            validator_addr?: string;
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("validator_addr" in data && data.validator_addr != undefined) {
                    this.validator_addr = data.validator_addr;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get validator_addr() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set validator_addr(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            validator_addr?: string;
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }) {
            const message = new QueryValidatorDelegationsRequest({});
            if (data.validator_addr != null) {
                message.validator_addr = data.validator_addr;
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                validator_addr?: string;
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.validator_addr != null) {
                data.validator_addr = this.validator_addr;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.validator_addr === "string" && this.validator_addr.length)
                writer.writeString(1, this.validator_addr);
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryValidatorDelegationsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryValidatorDelegationsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.validator_addr = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryValidatorDelegationsRequest {
            return QueryValidatorDelegationsRequest.deserialize(bytes);
        }
    }
    export class QueryValidatorDelegationsResponse extends pb_1.Message {
        constructor(data?: any[] | {
            delegation_responses?: dependency_4.cosmos.staking.v1beta1.DelegationResponse[];
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delegation_responses" in data && data.delegation_responses != undefined) {
                    this.delegation_responses = data.delegation_responses;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get delegation_responses() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.cosmos.staking.v1beta1.DelegationResponse, 1) as dependency_4.cosmos.staking.v1beta1.DelegationResponse[];
        }
        set delegation_responses(value: dependency_4.cosmos.staking.v1beta1.DelegationResponse[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            delegation_responses?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.DelegationResponse.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }) {
            const message = new QueryValidatorDelegationsResponse({});
            if (data.delegation_responses != null) {
                message.delegation_responses = data.delegation_responses.map(item => dependency_4.cosmos.staking.v1beta1.DelegationResponse.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                delegation_responses?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.DelegationResponse.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.delegation_responses != null) {
                data.delegation_responses = this.delegation_responses.map((item: dependency_4.cosmos.staking.v1beta1.DelegationResponse) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.delegation_responses !== undefined)
                writer.writeRepeatedMessage(1, this.delegation_responses, (item: dependency_4.cosmos.staking.v1beta1.DelegationResponse) => item.serialize(writer));
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryValidatorDelegationsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryValidatorDelegationsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.delegation_responses, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_4.cosmos.staking.v1beta1.DelegationResponse.deserialize(reader), dependency_4.cosmos.staking.v1beta1.DelegationResponse));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryValidatorDelegationsResponse {
            return QueryValidatorDelegationsResponse.deserialize(bytes);
        }
    }
    export class QueryValidatorUnbondingDelegationsRequest extends pb_1.Message {
        constructor(data?: any[] | {
            validator_addr?: string;
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("validator_addr" in data && data.validator_addr != undefined) {
                    this.validator_addr = data.validator_addr;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get validator_addr() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set validator_addr(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            validator_addr?: string;
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }) {
            const message = new QueryValidatorUnbondingDelegationsRequest({});
            if (data.validator_addr != null) {
                message.validator_addr = data.validator_addr;
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                validator_addr?: string;
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.validator_addr != null) {
                data.validator_addr = this.validator_addr;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.validator_addr === "string" && this.validator_addr.length)
                writer.writeString(1, this.validator_addr);
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryValidatorUnbondingDelegationsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryValidatorUnbondingDelegationsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.validator_addr = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryValidatorUnbondingDelegationsRequest {
            return QueryValidatorUnbondingDelegationsRequest.deserialize(bytes);
        }
    }
    export class QueryValidatorUnbondingDelegationsResponse extends pb_1.Message {
        constructor(data?: any[] | {
            unbonding_responses?: dependency_4.cosmos.staking.v1beta1.UnbondingDelegation[];
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("unbonding_responses" in data && data.unbonding_responses != undefined) {
                    this.unbonding_responses = data.unbonding_responses;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get unbonding_responses() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.cosmos.staking.v1beta1.UnbondingDelegation, 1) as dependency_4.cosmos.staking.v1beta1.UnbondingDelegation[];
        }
        set unbonding_responses(value: dependency_4.cosmos.staking.v1beta1.UnbondingDelegation[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            unbonding_responses?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }) {
            const message = new QueryValidatorUnbondingDelegationsResponse({});
            if (data.unbonding_responses != null) {
                message.unbonding_responses = data.unbonding_responses.map(item => dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                unbonding_responses?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.unbonding_responses != null) {
                data.unbonding_responses = this.unbonding_responses.map((item: dependency_4.cosmos.staking.v1beta1.UnbondingDelegation) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.unbonding_responses !== undefined)
                writer.writeRepeatedMessage(1, this.unbonding_responses, (item: dependency_4.cosmos.staking.v1beta1.UnbondingDelegation) => item.serialize(writer));
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryValidatorUnbondingDelegationsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryValidatorUnbondingDelegationsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.unbonding_responses, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.deserialize(reader), dependency_4.cosmos.staking.v1beta1.UnbondingDelegation));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryValidatorUnbondingDelegationsResponse {
            return QueryValidatorUnbondingDelegationsResponse.deserialize(bytes);
        }
    }
    export class QueryDelegationRequest extends pb_1.Message {
        constructor(data?: any[] | {
            delegator_addr?: string;
            validator_addr?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_addr" in data && data.delegator_addr != undefined) {
                    this.delegator_addr = data.delegator_addr;
                }
                if ("validator_addr" in data && data.validator_addr != undefined) {
                    this.validator_addr = data.validator_addr;
                }
            }
        }
        get delegator_addr() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set delegator_addr(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get validator_addr() {
            return pb_1.Message.getField(this, 2) as string;
        }
        set validator_addr(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            delegator_addr?: string;
            validator_addr?: string;
        }) {
            const message = new QueryDelegationRequest({});
            if (data.delegator_addr != null) {
                message.delegator_addr = data.delegator_addr;
            }
            if (data.validator_addr != null) {
                message.validator_addr = data.validator_addr;
            }
            return message;
        }
        toObject() {
            const data: {
                delegator_addr?: string;
                validator_addr?: string;
            } = {};
            if (this.delegator_addr != null) {
                data.delegator_addr = this.delegator_addr;
            }
            if (this.validator_addr != null) {
                data.validator_addr = this.validator_addr;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.delegator_addr === "string" && this.delegator_addr.length)
                writer.writeString(1, this.delegator_addr);
            if (typeof this.validator_addr === "string" && this.validator_addr.length)
                writer.writeString(2, this.validator_addr);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDelegationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDelegationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.delegator_addr = reader.readString();
                        break;
                    case 2:
                        message.validator_addr = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDelegationRequest {
            return QueryDelegationRequest.deserialize(bytes);
        }
    }
    export class QueryDelegationResponse extends pb_1.Message {
        constructor(data?: any[] | {
            delegation_response?: dependency_4.cosmos.staking.v1beta1.DelegationResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delegation_response" in data && data.delegation_response != undefined) {
                    this.delegation_response = data.delegation_response;
                }
            }
        }
        get delegation_response() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.staking.v1beta1.DelegationResponse, 1) as dependency_4.cosmos.staking.v1beta1.DelegationResponse;
        }
        set delegation_response(value: dependency_4.cosmos.staking.v1beta1.DelegationResponse) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        static fromObject(data: {
            delegation_response?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.DelegationResponse.prototype.toObject>;
        }) {
            const message = new QueryDelegationResponse({});
            if (data.delegation_response != null) {
                message.delegation_response = dependency_4.cosmos.staking.v1beta1.DelegationResponse.fromObject(data.delegation_response);
            }
            return message;
        }
        toObject() {
            const data: {
                delegation_response?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.DelegationResponse.prototype.toObject>;
            } = {};
            if (this.delegation_response != null) {
                data.delegation_response = this.delegation_response.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.delegation_response !== undefined)
                writer.writeMessage(1, this.delegation_response, () => this.delegation_response.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDelegationResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDelegationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.delegation_response, () => message.delegation_response = dependency_4.cosmos.staking.v1beta1.DelegationResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDelegationResponse {
            return QueryDelegationResponse.deserialize(bytes);
        }
    }
    export class QueryUnbondingDelegationRequest extends pb_1.Message {
        constructor(data?: any[] | {
            delegator_addr?: string;
            validator_addr?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_addr" in data && data.delegator_addr != undefined) {
                    this.delegator_addr = data.delegator_addr;
                }
                if ("validator_addr" in data && data.validator_addr != undefined) {
                    this.validator_addr = data.validator_addr;
                }
            }
        }
        get delegator_addr() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set delegator_addr(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get validator_addr() {
            return pb_1.Message.getField(this, 2) as string;
        }
        set validator_addr(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            delegator_addr?: string;
            validator_addr?: string;
        }) {
            const message = new QueryUnbondingDelegationRequest({});
            if (data.delegator_addr != null) {
                message.delegator_addr = data.delegator_addr;
            }
            if (data.validator_addr != null) {
                message.validator_addr = data.validator_addr;
            }
            return message;
        }
        toObject() {
            const data: {
                delegator_addr?: string;
                validator_addr?: string;
            } = {};
            if (this.delegator_addr != null) {
                data.delegator_addr = this.delegator_addr;
            }
            if (this.validator_addr != null) {
                data.validator_addr = this.validator_addr;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.delegator_addr === "string" && this.delegator_addr.length)
                writer.writeString(1, this.delegator_addr);
            if (typeof this.validator_addr === "string" && this.validator_addr.length)
                writer.writeString(2, this.validator_addr);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryUnbondingDelegationRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryUnbondingDelegationRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.delegator_addr = reader.readString();
                        break;
                    case 2:
                        message.validator_addr = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryUnbondingDelegationRequest {
            return QueryUnbondingDelegationRequest.deserialize(bytes);
        }
    }
    export class QueryUnbondingDelegationResponse extends pb_1.Message {
        constructor(data?: any[] | {
            unbond?: dependency_4.cosmos.staking.v1beta1.UnbondingDelegation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("unbond" in data && data.unbond != undefined) {
                    this.unbond = data.unbond;
                }
            }
        }
        get unbond() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.staking.v1beta1.UnbondingDelegation, 1) as dependency_4.cosmos.staking.v1beta1.UnbondingDelegation;
        }
        set unbond(value: dependency_4.cosmos.staking.v1beta1.UnbondingDelegation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        static fromObject(data: {
            unbond?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.prototype.toObject>;
        }) {
            const message = new QueryUnbondingDelegationResponse({});
            if (data.unbond != null) {
                message.unbond = dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.fromObject(data.unbond);
            }
            return message;
        }
        toObject() {
            const data: {
                unbond?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.prototype.toObject>;
            } = {};
            if (this.unbond != null) {
                data.unbond = this.unbond.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.unbond !== undefined)
                writer.writeMessage(1, this.unbond, () => this.unbond.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryUnbondingDelegationResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryUnbondingDelegationResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.unbond, () => message.unbond = dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryUnbondingDelegationResponse {
            return QueryUnbondingDelegationResponse.deserialize(bytes);
        }
    }
    export class QueryDelegatorDelegationsRequest extends pb_1.Message {
        constructor(data?: any[] | {
            delegator_addr?: string;
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_addr" in data && data.delegator_addr != undefined) {
                    this.delegator_addr = data.delegator_addr;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get delegator_addr() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set delegator_addr(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            delegator_addr?: string;
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }) {
            const message = new QueryDelegatorDelegationsRequest({});
            if (data.delegator_addr != null) {
                message.delegator_addr = data.delegator_addr;
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                delegator_addr?: string;
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.delegator_addr != null) {
                data.delegator_addr = this.delegator_addr;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.delegator_addr === "string" && this.delegator_addr.length)
                writer.writeString(1, this.delegator_addr);
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDelegatorDelegationsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDelegatorDelegationsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.delegator_addr = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDelegatorDelegationsRequest {
            return QueryDelegatorDelegationsRequest.deserialize(bytes);
        }
    }
    export class QueryDelegatorDelegationsResponse extends pb_1.Message {
        constructor(data?: any[] | {
            delegation_responses?: dependency_4.cosmos.staking.v1beta1.DelegationResponse[];
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delegation_responses" in data && data.delegation_responses != undefined) {
                    this.delegation_responses = data.delegation_responses;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get delegation_responses() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.cosmos.staking.v1beta1.DelegationResponse, 1) as dependency_4.cosmos.staking.v1beta1.DelegationResponse[];
        }
        set delegation_responses(value: dependency_4.cosmos.staking.v1beta1.DelegationResponse[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            delegation_responses?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.DelegationResponse.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }) {
            const message = new QueryDelegatorDelegationsResponse({});
            if (data.delegation_responses != null) {
                message.delegation_responses = data.delegation_responses.map(item => dependency_4.cosmos.staking.v1beta1.DelegationResponse.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                delegation_responses?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.DelegationResponse.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.delegation_responses != null) {
                data.delegation_responses = this.delegation_responses.map((item: dependency_4.cosmos.staking.v1beta1.DelegationResponse) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.delegation_responses !== undefined)
                writer.writeRepeatedMessage(1, this.delegation_responses, (item: dependency_4.cosmos.staking.v1beta1.DelegationResponse) => item.serialize(writer));
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDelegatorDelegationsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDelegatorDelegationsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.delegation_responses, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_4.cosmos.staking.v1beta1.DelegationResponse.deserialize(reader), dependency_4.cosmos.staking.v1beta1.DelegationResponse));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDelegatorDelegationsResponse {
            return QueryDelegatorDelegationsResponse.deserialize(bytes);
        }
    }
    export class QueryDelegatorUnbondingDelegationsRequest extends pb_1.Message {
        constructor(data?: any[] | {
            delegator_addr?: string;
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_addr" in data && data.delegator_addr != undefined) {
                    this.delegator_addr = data.delegator_addr;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get delegator_addr() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set delegator_addr(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            delegator_addr?: string;
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }) {
            const message = new QueryDelegatorUnbondingDelegationsRequest({});
            if (data.delegator_addr != null) {
                message.delegator_addr = data.delegator_addr;
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                delegator_addr?: string;
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.delegator_addr != null) {
                data.delegator_addr = this.delegator_addr;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.delegator_addr === "string" && this.delegator_addr.length)
                writer.writeString(1, this.delegator_addr);
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDelegatorUnbondingDelegationsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDelegatorUnbondingDelegationsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.delegator_addr = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDelegatorUnbondingDelegationsRequest {
            return QueryDelegatorUnbondingDelegationsRequest.deserialize(bytes);
        }
    }
    export class QueryDelegatorUnbondingDelegationsResponse extends pb_1.Message {
        constructor(data?: any[] | {
            unbonding_responses?: dependency_4.cosmos.staking.v1beta1.UnbondingDelegation[];
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("unbonding_responses" in data && data.unbonding_responses != undefined) {
                    this.unbonding_responses = data.unbonding_responses;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get unbonding_responses() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.cosmos.staking.v1beta1.UnbondingDelegation, 1) as dependency_4.cosmos.staking.v1beta1.UnbondingDelegation[];
        }
        set unbonding_responses(value: dependency_4.cosmos.staking.v1beta1.UnbondingDelegation[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            unbonding_responses?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }) {
            const message = new QueryDelegatorUnbondingDelegationsResponse({});
            if (data.unbonding_responses != null) {
                message.unbonding_responses = data.unbonding_responses.map(item => dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                unbonding_responses?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.unbonding_responses != null) {
                data.unbonding_responses = this.unbonding_responses.map((item: dependency_4.cosmos.staking.v1beta1.UnbondingDelegation) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.unbonding_responses !== undefined)
                writer.writeRepeatedMessage(1, this.unbonding_responses, (item: dependency_4.cosmos.staking.v1beta1.UnbondingDelegation) => item.serialize(writer));
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDelegatorUnbondingDelegationsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDelegatorUnbondingDelegationsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.unbonding_responses, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_4.cosmos.staking.v1beta1.UnbondingDelegation.deserialize(reader), dependency_4.cosmos.staking.v1beta1.UnbondingDelegation));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDelegatorUnbondingDelegationsResponse {
            return QueryDelegatorUnbondingDelegationsResponse.deserialize(bytes);
        }
    }
    export class QueryRedelegationsRequest extends pb_1.Message {
        constructor(data?: any[] | {
            delegator_addr?: string;
            src_validator_addr?: string;
            dst_validator_addr?: string;
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_addr" in data && data.delegator_addr != undefined) {
                    this.delegator_addr = data.delegator_addr;
                }
                if ("src_validator_addr" in data && data.src_validator_addr != undefined) {
                    this.src_validator_addr = data.src_validator_addr;
                }
                if ("dst_validator_addr" in data && data.dst_validator_addr != undefined) {
                    this.dst_validator_addr = data.dst_validator_addr;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get delegator_addr() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set delegator_addr(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get src_validator_addr() {
            return pb_1.Message.getField(this, 2) as string;
        }
        set src_validator_addr(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get dst_validator_addr() {
            return pb_1.Message.getField(this, 3) as string;
        }
        set dst_validator_addr(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageRequest, 4) as dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        static fromObject(data: {
            delegator_addr?: string;
            src_validator_addr?: string;
            dst_validator_addr?: string;
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }) {
            const message = new QueryRedelegationsRequest({});
            if (data.delegator_addr != null) {
                message.delegator_addr = data.delegator_addr;
            }
            if (data.src_validator_addr != null) {
                message.src_validator_addr = data.src_validator_addr;
            }
            if (data.dst_validator_addr != null) {
                message.dst_validator_addr = data.dst_validator_addr;
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                delegator_addr?: string;
                src_validator_addr?: string;
                dst_validator_addr?: string;
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.delegator_addr != null) {
                data.delegator_addr = this.delegator_addr;
            }
            if (this.src_validator_addr != null) {
                data.src_validator_addr = this.src_validator_addr;
            }
            if (this.dst_validator_addr != null) {
                data.dst_validator_addr = this.dst_validator_addr;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.delegator_addr === "string" && this.delegator_addr.length)
                writer.writeString(1, this.delegator_addr);
            if (typeof this.src_validator_addr === "string" && this.src_validator_addr.length)
                writer.writeString(2, this.src_validator_addr);
            if (typeof this.dst_validator_addr === "string" && this.dst_validator_addr.length)
                writer.writeString(3, this.dst_validator_addr);
            if (this.pagination !== undefined)
                writer.writeMessage(4, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryRedelegationsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryRedelegationsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.delegator_addr = reader.readString();
                        break;
                    case 2:
                        message.src_validator_addr = reader.readString();
                        break;
                    case 3:
                        message.dst_validator_addr = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryRedelegationsRequest {
            return QueryRedelegationsRequest.deserialize(bytes);
        }
    }
    export class QueryRedelegationsResponse extends pb_1.Message {
        constructor(data?: any[] | {
            redelegation_responses?: dependency_4.cosmos.staking.v1beta1.RedelegationResponse[];
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("redelegation_responses" in data && data.redelegation_responses != undefined) {
                    this.redelegation_responses = data.redelegation_responses;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get redelegation_responses() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.cosmos.staking.v1beta1.RedelegationResponse, 1) as dependency_4.cosmos.staking.v1beta1.RedelegationResponse[];
        }
        set redelegation_responses(value: dependency_4.cosmos.staking.v1beta1.RedelegationResponse[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            redelegation_responses?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.RedelegationResponse.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }) {
            const message = new QueryRedelegationsResponse({});
            if (data.redelegation_responses != null) {
                message.redelegation_responses = data.redelegation_responses.map(item => dependency_4.cosmos.staking.v1beta1.RedelegationResponse.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                redelegation_responses?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.RedelegationResponse.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.redelegation_responses != null) {
                data.redelegation_responses = this.redelegation_responses.map((item: dependency_4.cosmos.staking.v1beta1.RedelegationResponse) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.redelegation_responses !== undefined)
                writer.writeRepeatedMessage(1, this.redelegation_responses, (item: dependency_4.cosmos.staking.v1beta1.RedelegationResponse) => item.serialize(writer));
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryRedelegationsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryRedelegationsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.redelegation_responses, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_4.cosmos.staking.v1beta1.RedelegationResponse.deserialize(reader), dependency_4.cosmos.staking.v1beta1.RedelegationResponse));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryRedelegationsResponse {
            return QueryRedelegationsResponse.deserialize(bytes);
        }
    }
    export class QueryDelegatorValidatorsRequest extends pb_1.Message {
        constructor(data?: any[] | {
            delegator_addr?: string;
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_addr" in data && data.delegator_addr != undefined) {
                    this.delegator_addr = data.delegator_addr;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get delegator_addr() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set delegator_addr(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageRequest, 2) as dependency_1.cosmos.base.query.v1beta1.PageRequest;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageRequest) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            delegator_addr?: string;
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
        }) {
            const message = new QueryDelegatorValidatorsRequest({});
            if (data.delegator_addr != null) {
                message.delegator_addr = data.delegator_addr;
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                delegator_addr?: string;
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;
            } = {};
            if (this.delegator_addr != null) {
                data.delegator_addr = this.delegator_addr;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.delegator_addr === "string" && this.delegator_addr.length)
                writer.writeString(1, this.delegator_addr);
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDelegatorValidatorsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDelegatorValidatorsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.delegator_addr = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDelegatorValidatorsRequest {
            return QueryDelegatorValidatorsRequest.deserialize(bytes);
        }
    }
    export class QueryDelegatorValidatorsResponse extends pb_1.Message {
        constructor(data?: any[] | {
            validators?: dependency_4.cosmos.staking.v1beta1.Validator[];
            pagination?: dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("validators" in data && data.validators != undefined) {
                    this.validators = data.validators;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get validators() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_4.cosmos.staking.v1beta1.Validator, 1) as dependency_4.cosmos.staking.v1beta1.Validator[];
        }
        set validators(value: dependency_4.cosmos.staking.v1beta1.Validator[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_1.cosmos.base.query.v1beta1.PageResponse;
        }
        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageResponse) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        static fromObject(data: {
            validators?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Validator.prototype.toObject>[];
            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
        }) {
            const message = new QueryDelegatorValidatorsResponse({});
            if (data.validators != null) {
                message.validators = data.validators.map(item => dependency_4.cosmos.staking.v1beta1.Validator.fromObject(item));
            }
            if (data.pagination != null) {
                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                validators?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Validator.prototype.toObject>[];
                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;
            } = {};
            if (this.validators != null) {
                data.validators = this.validators.map((item: dependency_4.cosmos.staking.v1beta1.Validator) => item.toObject());
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.validators !== undefined)
                writer.writeRepeatedMessage(1, this.validators, (item: dependency_4.cosmos.staking.v1beta1.Validator) => item.serialize(writer));
            if (this.pagination !== undefined)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDelegatorValidatorsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDelegatorValidatorsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.validators, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_4.cosmos.staking.v1beta1.Validator.deserialize(reader), dependency_4.cosmos.staking.v1beta1.Validator));
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDelegatorValidatorsResponse {
            return QueryDelegatorValidatorsResponse.deserialize(bytes);
        }
    }
    export class QueryDelegatorValidatorRequest extends pb_1.Message {
        constructor(data?: any[] | {
            delegator_addr?: string;
            validator_addr?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delegator_addr" in data && data.delegator_addr != undefined) {
                    this.delegator_addr = data.delegator_addr;
                }
                if ("validator_addr" in data && data.validator_addr != undefined) {
                    this.validator_addr = data.validator_addr;
                }
            }
        }
        get delegator_addr() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set delegator_addr(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get validator_addr() {
            return pb_1.Message.getField(this, 2) as string;
        }
        set validator_addr(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            delegator_addr?: string;
            validator_addr?: string;
        }) {
            const message = new QueryDelegatorValidatorRequest({});
            if (data.delegator_addr != null) {
                message.delegator_addr = data.delegator_addr;
            }
            if (data.validator_addr != null) {
                message.validator_addr = data.validator_addr;
            }
            return message;
        }
        toObject() {
            const data: {
                delegator_addr?: string;
                validator_addr?: string;
            } = {};
            if (this.delegator_addr != null) {
                data.delegator_addr = this.delegator_addr;
            }
            if (this.validator_addr != null) {
                data.validator_addr = this.validator_addr;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.delegator_addr === "string" && this.delegator_addr.length)
                writer.writeString(1, this.delegator_addr);
            if (typeof this.validator_addr === "string" && this.validator_addr.length)
                writer.writeString(2, this.validator_addr);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDelegatorValidatorRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDelegatorValidatorRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.delegator_addr = reader.readString();
                        break;
                    case 2:
                        message.validator_addr = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDelegatorValidatorRequest {
            return QueryDelegatorValidatorRequest.deserialize(bytes);
        }
    }
    export class QueryDelegatorValidatorResponse extends pb_1.Message {
        constructor(data?: any[] | {
            validator?: dependency_4.cosmos.staking.v1beta1.Validator;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("validator" in data && data.validator != undefined) {
                    this.validator = data.validator;
                }
            }
        }
        get validator() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.staking.v1beta1.Validator, 1) as dependency_4.cosmos.staking.v1beta1.Validator;
        }
        set validator(value: dependency_4.cosmos.staking.v1beta1.Validator) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        static fromObject(data: {
            validator?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Validator.prototype.toObject>;
        }) {
            const message = new QueryDelegatorValidatorResponse({});
            if (data.validator != null) {
                message.validator = dependency_4.cosmos.staking.v1beta1.Validator.fromObject(data.validator);
            }
            return message;
        }
        toObject() {
            const data: {
                validator?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Validator.prototype.toObject>;
            } = {};
            if (this.validator != null) {
                data.validator = this.validator.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.validator !== undefined)
                writer.writeMessage(1, this.validator, () => this.validator.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryDelegatorValidatorResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryDelegatorValidatorResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.validator, () => message.validator = dependency_4.cosmos.staking.v1beta1.Validator.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryDelegatorValidatorResponse {
            return QueryDelegatorValidatorResponse.deserialize(bytes);
        }
    }
    export class QueryHistoricalInfoRequest extends pb_1.Message {
        constructor(data?: any[] | {
            height?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("height" in data && data.height != undefined) {
                    this.height = data.height;
                }
            }
        }
        get height() {
            return pb_1.Message.getField(this, 1) as number;
        }
        set height(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            height?: number;
        }) {
            const message = new QueryHistoricalInfoRequest({});
            if (data.height != null) {
                message.height = data.height;
            }
            return message;
        }
        toObject() {
            const data: {
                height?: number;
            } = {};
            if (this.height != null) {
                data.height = this.height;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.height !== undefined)
                writer.writeInt64(1, this.height);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryHistoricalInfoRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryHistoricalInfoRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.height = reader.readInt64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryHistoricalInfoRequest {
            return QueryHistoricalInfoRequest.deserialize(bytes);
        }
    }
    export class QueryHistoricalInfoResponse extends pb_1.Message {
        constructor(data?: any[] | {
            hist?: dependency_4.cosmos.staking.v1beta1.HistoricalInfo;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("hist" in data && data.hist != undefined) {
                    this.hist = data.hist;
                }
            }
        }
        get hist() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.staking.v1beta1.HistoricalInfo, 1) as dependency_4.cosmos.staking.v1beta1.HistoricalInfo;
        }
        set hist(value: dependency_4.cosmos.staking.v1beta1.HistoricalInfo) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        static fromObject(data: {
            hist?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.HistoricalInfo.prototype.toObject>;
        }) {
            const message = new QueryHistoricalInfoResponse({});
            if (data.hist != null) {
                message.hist = dependency_4.cosmos.staking.v1beta1.HistoricalInfo.fromObject(data.hist);
            }
            return message;
        }
        toObject() {
            const data: {
                hist?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.HistoricalInfo.prototype.toObject>;
            } = {};
            if (this.hist != null) {
                data.hist = this.hist.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.hist !== undefined)
                writer.writeMessage(1, this.hist, () => this.hist.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryHistoricalInfoResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryHistoricalInfoResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.hist, () => message.hist = dependency_4.cosmos.staking.v1beta1.HistoricalInfo.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryHistoricalInfoResponse {
            return QueryHistoricalInfoResponse.deserialize(bytes);
        }
    }
    export class QueryPoolRequest extends pb_1.Message {
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}) {
            const message = new QueryPoolRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryPoolRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryPoolRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryPoolRequest {
            return QueryPoolRequest.deserialize(bytes);
        }
    }
    export class QueryPoolResponse extends pb_1.Message {
        constructor(data?: any[] | {
            pool?: dependency_4.cosmos.staking.v1beta1.Pool;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("pool" in data && data.pool != undefined) {
                    this.pool = data.pool;
                }
            }
        }
        get pool() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.staking.v1beta1.Pool, 1) as dependency_4.cosmos.staking.v1beta1.Pool;
        }
        set pool(value: dependency_4.cosmos.staking.v1beta1.Pool) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        static fromObject(data: {
            pool?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Pool.prototype.toObject>;
        }) {
            const message = new QueryPoolResponse({});
            if (data.pool != null) {
                message.pool = dependency_4.cosmos.staking.v1beta1.Pool.fromObject(data.pool);
            }
            return message;
        }
        toObject() {
            const data: {
                pool?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Pool.prototype.toObject>;
            } = {};
            if (this.pool != null) {
                data.pool = this.pool.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.pool !== undefined)
                writer.writeMessage(1, this.pool, () => this.pool.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryPoolResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryPoolResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.pool, () => message.pool = dependency_4.cosmos.staking.v1beta1.Pool.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryPoolResponse {
            return QueryPoolResponse.deserialize(bytes);
        }
    }
    export class QueryParamsRequest extends pb_1.Message {
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}) {
            const message = new QueryParamsRequest({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryParamsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryParamsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryParamsRequest {
            return QueryParamsRequest.deserialize(bytes);
        }
    }
    export class QueryParamsResponse extends pb_1.Message {
        constructor(data?: any[] | {
            params?: dependency_4.cosmos.staking.v1beta1.Params;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("params" in data && data.params != undefined) {
                    this.params = data.params;
                }
            }
        }
        get params() {
            return pb_1.Message.getWrapperField(this, dependency_4.cosmos.staking.v1beta1.Params, 1) as dependency_4.cosmos.staking.v1beta1.Params;
        }
        set params(value: dependency_4.cosmos.staking.v1beta1.Params) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        static fromObject(data: {
            params?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Params.prototype.toObject>;
        }) {
            const message = new QueryParamsResponse({});
            if (data.params != null) {
                message.params = dependency_4.cosmos.staking.v1beta1.Params.fromObject(data.params);
            }
            return message;
        }
        toObject() {
            const data: {
                params?: ReturnType<typeof dependency_4.cosmos.staking.v1beta1.Params.prototype.toObject>;
            } = {};
            if (this.params != null) {
                data.params = this.params.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.params !== undefined)
                writer.writeMessage(1, this.params, () => this.params.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryParamsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryParamsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.params, () => message.params = dependency_4.cosmos.staking.v1beta1.Params.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): QueryParamsResponse {
            return QueryParamsResponse.deserialize(bytes);
        }
    }
}
